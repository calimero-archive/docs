{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Overview",
        "href": "/",
        "docId": "intro"
      },
      {
        "type": "category",
        "label": "Getting Started",
        "collapsible": true,
        "collapsed": false,
        "items": [
          {
            "type": "link",
            "label": "Architecture",
            "href": "/getting-started/architecture",
            "docId": "getting-started/architecture"
          }
        ]
      },
      {
        "type": "category",
        "label": "Calimero Shard",
        "collapsible": true,
        "collapsed": false,
        "items": [
          {
            "type": "link",
            "label": "Architecture",
            "href": "/private_shard/architecture",
            "docId": "private_shard/architecture"
          },
          {
            "type": "link",
            "label": "Running a Shard",
            "href": "/private_shard/running_a_shard",
            "docId": "private_shard/running_a_shard"
          }
        ]
      },
      {
        "type": "category",
        "label": "Bridge",
        "collapsible": true,
        "collapsed": false,
        "items": [
          {
            "type": "link",
            "label": "Architecture",
            "href": "/bridge/architecture",
            "docId": "bridge/architecture"
          },
          {
            "type": "link",
            "label": "Relayer Service",
            "href": "/bridge/relayer_service",
            "docId": "bridge/relayer_service"
          },
          {
            "type": "link",
            "label": "Light Client Contract",
            "href": "/bridge/light_client_contract",
            "docId": "bridge/light_client_contract"
          },
          {
            "type": "link",
            "label": "Light Client Prover",
            "href": "/bridge/light_client_prover",
            "docId": "bridge/light_client_prover"
          },
          {
            "type": "link",
            "label": "Bridge Service",
            "href": "/bridge/prover_service",
            "docId": "bridge/prover_service"
          },
          {
            "type": "link",
            "label": "Running a Bridge",
            "href": "/bridge/running_a_bridge",
            "docId": "bridge/running_a_bridge"
          },
          {
            "type": "category",
            "label": "Connectors",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Connectors Overview",
                "href": "/bridge/connectors/overview",
                "docId": "bridge/connectors/overview"
              },
              {
                "type": "link",
                "label": "Cross Shard Contract Call Connector",
                "href": "/bridge/connectors/cross_shard_contract_call_connector",
                "docId": "bridge/connectors/cross_shard_contract_call_connector"
              },
              {
                "type": "link",
                "label": "Fungible Token Connector",
                "href": "/bridge/connectors/fungible_token_connector",
                "docId": "bridge/connectors/fungible_token_connector"
              },
              {
                "type": "link",
                "label": "Non-Fungible Token Connector",
                "href": "/bridge/connectors/non_fungible_token_connector copy",
                "docId": "bridge/connectors/non_fungible_token_connector copy"
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "label": "Interact",
        "collapsible": true,
        "collapsed": false,
        "items": [
          {
            "type": "link",
            "label": "Local Development",
            "href": "/interact/local_development",
            "docId": "interact/local_development"
          },
          {
            "type": "link",
            "label": "AssemblyScript SDK",
            "href": "/interact/assembly_script_sdk",
            "docId": "interact/assembly_script_sdk"
          },
          {
            "type": "link",
            "label": "RPC",
            "href": "/interact/rpc",
            "docId": "interact/rpc"
          },
          {
            "type": "link",
            "label": "Rust SDK",
            "href": "/interact/rust_sdk",
            "docId": "interact/rust_sdk"
          },
          {
            "type": "link",
            "label": "Indexer",
            "href": "/interact/indexer",
            "docId": "interact/indexer"
          }
        ]
      },
      {
        "type": "category",
        "label": "Integrate",
        "collapsible": true,
        "collapsed": false,
        "items": [
          {
            "type": "link",
            "label": "Fungible Token Integration",
            "href": "/integrate/fungible_token",
            "docId": "integrate/fungible_token"
          },
          {
            "type": "link",
            "label": "Non-Fungible Token Integration",
            "href": "/integrate/non_fungible_token",
            "docId": "integrate/non_fungible_token"
          },
          {
            "type": "link",
            "label": "Wallet Integration",
            "href": "/integrate/wallet_integration",
            "docId": "integrate/wallet_integration"
          }
        ]
      },
      {
        "type": "link",
        "label": "FAQs",
        "href": "/faq",
        "docId": "faq"
      }
    ]
  },
  "docs": {
    "bridge/architecture": {
      "id": "bridge/architecture",
      "title": "Architecture",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "bridge/connectors/cross_shard_contract_call_connector": {
      "id": "bridge/connectors/cross_shard_contract_call_connector",
      "title": "Cross Shard Contract Call Connector",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "bridge/connectors/fungible_token_connector": {
      "id": "bridge/connectors/fungible_token_connector",
      "title": "Fungible Token Connector",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "bridge/connectors/non_fungible_token_connector copy": {
      "id": "bridge/connectors/non_fungible_token_connector copy",
      "title": "Non-Fungible Token Connector",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "bridge/connectors/overview": {
      "id": "bridge/connectors/overview",
      "title": "Connectors Overview",
      "description": "The prover enables us to build a set of contracts for transferring assets from one chain to another, or even to make cross shard contract calls. Most notably, Calimero supports transfering Fungible tokens as well as Non Fungible tokens from one chain to another.",
      "sidebar": "tutorialSidebar"
    },
    "bridge/light_client_contract": {
      "id": "bridge/light_client_contract",
      "title": "Light Client Contract",
      "description": "There are 2 scenarios, either a bridge from NEAR mainnet to Calimero shard is needed, or a Calimero shard to Calimero shard bridge can be needed for various use cases. Calimero on NEAR Client and NEAR on Calimero Client are implementations of the NEAR light client as a contract. The light client contract will accept block headers that are being relayed to it if the blocks meet certain validation criteria - most notably each valid block header needs to contain at least two thirds valid signatures of the epoch block producers. The contract does not need to verify every single block header for blocks that happened ever in the chain history, as long as it has at least one verified block header per epoch. Another useful property of the light client is that every NEAR header contains a root of the merkle tree computed from all headers before it. As a result, if you have one NEAR header you can efficiently verify any event that happened in any header before it.",
      "sidebar": "tutorialSidebar"
    },
    "bridge/light_client_prover": {
      "id": "bridge/light_client_prover",
      "title": "Light Client Prover",
      "description": "What makes the light client contract interesting is the ability to prove that something happened on a specific chain. The prover takes as input the proof data that contain a merkle path to the block where the transaction/receipt originated and a merkle path to the transaction/receipt, also as input the height of the known block to the light client contract needs to be provided, and this block needs to be ahead or on the block of the transaction that we are proving. With all of this the prover can calculate the expected block merkle root and compare it to the one stored in the light client block.",
      "sidebar": "tutorialSidebar"
    },
    "bridge/prover_service": {
      "id": "bridge/prover_service",
      "title": "Bridge Service",
      "description": "What makes the light client contract interesting is the ability to prove that something happened on a specific chain. The prover takes as input the proof data that contain a merkle path to the block where the transaction/receipt originated and a merkle path to the transaction/receipt, also as input the height of the known block to the light client contract needs to be provided, and this block needs to be ahead or on the block of the transaction that we are proving. With all of this the prover can calculate the expected block merkle root and compare it to the one stored in the light client block.",
      "sidebar": "tutorialSidebar"
    },
    "bridge/relayer_service": {
      "id": "bridge/relayer_service",
      "title": "Relayer Service",
      "description": "Relayer reads blocks from a source chain and sends the block headers to the light client contract on the destination chain. To have a bidirectional bridge, block headers need to be relayed both ways, meaning that light client contracts need to exist on both chains/shards.",
      "sidebar": "tutorialSidebar"
    },
    "bridge/running_a_bridge": {
      "id": "bridge/running_a_bridge",
      "title": "Running a Bridge",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "faq": {
      "id": "faq",
      "title": "FAQs",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "getting-started/architecture": {
      "id": "getting-started/architecture",
      "title": "Architecture",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "integrate/fungible_token": {
      "id": "integrate/fungible_token",
      "title": "Fungible Token Integration",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "integrate/non_fungible_token": {
      "id": "integrate/non_fungible_token",
      "title": "Non-Fungible Token Integration",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "integrate/wallet_integration": {
      "id": "integrate/wallet_integration",
      "title": "Wallet Integration",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "interact/assembly_script_sdk": {
      "id": "interact/assembly_script_sdk",
      "title": "AssemblyScript SDK",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "interact/indexer": {
      "id": "interact/indexer",
      "title": "Indexer",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "interact/local_development": {
      "id": "interact/local_development",
      "title": "Local Development",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "interact/rpc": {
      "id": "interact/rpc",
      "title": "RPC",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "interact/rust_sdk": {
      "id": "interact/rust_sdk",
      "title": "Rust SDK",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "intro": {
      "id": "intro",
      "title": "Private Shard",
      "description": "A Calimero Private Shard is a customizable L2 network built on top of NEAR Protocol. Private shards are independent networks and do not share validators, execution and state storage. NEAR Protocol is a blockchain that has been built from the ground up to be high-performant, incredibly secure, and infinitely scalable all while supporting sustainability and Calimero Shards share all the benefits.",
      "sidebar": "tutorialSidebar"
    },
    "private_shard/architecture": {
      "id": "private_shard/architecture",
      "title": "Architecture",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "private_shard/running_a_shard": {
      "id": "private_shard/running_a_shard",
      "title": "Running a Shard",
      "description": "",
      "sidebar": "tutorialSidebar"
    }
  }
}